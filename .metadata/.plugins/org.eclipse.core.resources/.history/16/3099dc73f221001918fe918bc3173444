package server;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutput;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.atomic.AtomicBoolean;



public class SocketServer extends Thread{
	
	
	/*public static final int PORT_NUMBER = 8081;
	protected Socket socket; 
	
	
	private SocketServer(Socket socket) {
		this.socket = socket;
		System.out.println("new puticlient connected from" + socket.getInetAddress().getHostAddress());
		start();
	}
	
	
	public void run() {
		InputStream in = null;
		OutputStream out = null;
		
		try {
			in = socket.getInputStream();
			out = socket.getOutputStream();
			BufferedReader buffer = new BufferedReader(new InputStreamReader(in));
			String req;
			while(( req = buffer.readLine()) != null) {
				System.out.println("msg received" + req);
				req += '\n';
				out.write(req.getBytes());
			}
			
		}catch(IOException ex) {
			ex.printStackTrace();
		}
	}
	
	*/
	public static void main(String[] args) throws IOException {
        ServerSocket server = new ServerSocket(5056);
        while(true) {
        	Socket s = null;
        	try {
        		
        		s = server.accept();
        		System.out.println("New puto client connected to the server "+ s);
        		DataInputStream in = new DataInputStream(s.getInputStream());
        		DataOutputStream out = new DataOutputStream(s.getOutputStream());
        		Thread t = new ClientHandler();
        		t.start();
        		
        	}catch(Exception e) {
        		s.close();
        		e.printStackTrace();
        	}
        	
        }
        
    }
}
