package server;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutput;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicBoolean;



public class SocketServer extends Thread{
	
	static int i=0;
	static ArrayList<ClientHandler> ar = new ArrayList<ClientHandler>();
	static ServerSocket server;
	
	
	public static void main(String[] args) throws IOException, EOFException{
		
		try {
        server = new ServerSocket();
        server.setReuseAddress(on);
        server.bind(new InetSocketAddress(8081));
        while(true) {
        	try {
        		Socket s = null;
        		s = server.accept();
        		//System.out.println("New puto client connected to the server "+ s);
        		DataInputStream in = new DataInputStream(s.getInputStream());
        		DataOutputStream out = new DataOutputStream(s.getOutputStream());
        		ClientHandler ch = new ClientHandler(s, "client"+i ,in, out);
        		Thread t = new Thread(ch);
        		ar.add(ch);
        		t.start();
        		i++;
        		//if (i%1000 == 0) {System.out.println(i);}
        	}catch(Throwable exs){
        		server.close();
        		System.out.println(i);
        		exs.printStackTrace();
        		break;
       }/*finally{
        		server.close();
        		System.out.println(i);
        	}*/
        }
		}finally {
        System.out.println(i);
        server.close();
        }
        
    }
}
